import os
import sqlite3
import telebot
from datetime import datetime
from flask import Flask, request
from telebot.types import ReplyKeyboardMarkup
# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TOKEN = os.getenv("TOKEN")
ALLOWED_USERS = list(map(int, os.getenv("ALLOWED_USERS", "").split(",")))
VERCEL_URL = os.getenv("https://logoped-bot.vercel.app")  # –Ω–∞–ø—Ä–∏–º–µ—Ä, 'https://logoped-bot.vercel.app'

bot = telebot.TeleBot(TOKEN)

# --- Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è Webhook ---
app = Flask(__name__)

@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

# --- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ---
conn = sqlite3.connect("logoped_bot.db", check_same_thread=False)
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS clients (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT UNIQUE,
    balance INTEGER DEFAULT 0
)''')

c.execute('''CREATE TABLE IF NOT EXISTS sessions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    client_id INTEGER,
    date TEXT,
    attended INTEGER DEFAULT 0,
    FOREIGN KEY(client_id) REFERENCES clients(id)
)''')
conn.commit()

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞", "üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤")
    markup.add("üìÖ –ó–∞–ø–∏—Å–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞", "‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏–µ")
    markup.add("üí∞ –í–Ω–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É", "üìä –ë–∞–ª–∞–Ω—Å –∫–ª–∏–µ–Ω—Ç–∞")
    markup.add("üßæ –ò—Å—Ç–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞", "üóìÔ∏è –û—Ç—á—ë—Ç –Ω–∞ –Ω–µ–¥–µ–ª—é")
    markup.add("‚ñ∂Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    return markup

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫ ---
@bot.message_handler(commands=["start"])
def handle_start(message):
    if message.chat.id not in ALLOWED_USERS:
        bot.send_message(message.chat.id, "‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    bot.send_message(message.chat.id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –õ–æ–≥–æ–ø–µ–¥-–ë–æ—Ç–∞!", reply_markup=main_menu())

@bot.message_handler(func=lambda msg: msg.text == "‚ñ∂Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def restart_interface(message):
    bot.send_message(message.chat.id, "üîÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ.", reply_markup=main_menu())

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook ---
webhook_url = f"{VERCEL_URL}/{TOKEN}"
bot.remove_webhook()
bot.set_webhook(url=webhook_url)

# --- –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è Vercel –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è wsgi.py) ---
application = app
